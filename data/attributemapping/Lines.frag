
#version 330


////////////////////////////////////////////////////////////////////////////////////////////////////
// Input from geometry shader
////////////////////////////////////////////////////////////////////////////////////////////////////

flat          in int   g_lineId;    // Line ID
noperspective in vec2  g_screenpos; // Position (screen space)
              in float g_width;     // Line width (0..1)
              in vec3  g_color;     // Line color (0..1, mapped on color map)


////////////////////////////////////////////////////////////////////////////////////////////////////
// Output to frame buffer
////////////////////////////////////////////////////////////////////////////////////////////////////

layout (location = 0) out vec4  color;
layout (location = 1) out float outId;


////////////////////////////////////////////////////////////////////////////////////////////////////
// Fragment shader
////////////////////////////////////////////////////////////////////////////////////////////////////

void main()
{
    // Get line attributes width and color
    float w = 0.5 + g_width*4.5;

    // Calculate distance of fragment to line center
    vec2 dCoord = g_screenpos - gl_FragCoord.xy;
    float dist2 = dot(dCoord, dCoord);
    if (dist2 > w*w) {
        // Discard pixel, when it is too far away from line center (resp. to line width)
        discard;
    } else {
        color = vec4(g_color, 1.0);
        outId = float(g_lineId);
    }
}
